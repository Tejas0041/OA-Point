{"ast":null,"code":"// Token utility functions\nexport const isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n\n    // Check if token is expired (with 5 minute buffer)\n    return payload.exp < currentTime + 300;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return true;\n  }\n};\nexport const getTokenExpirationTime = token => {\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return new Date(payload.exp * 1000);\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return null;\n  }\n};\nexport const clearAuthData = () => {\n  var _window$axios, _window$axios$default, _window$axios$default2, _window$axios$default3;\n  localStorage.removeItem('token');\n  (_window$axios = window.axios) === null || _window$axios === void 0 ? true : (_window$axios$default = _window$axios.defaults) === null || _window$axios$default === void 0 ? true : (_window$axios$default2 = _window$axios$default.headers) === null || _window$axios$default2 === void 0 ? true : (_window$axios$default3 = _window$axios$default2.common) === null || _window$axios$default3 === void 0 ? true : delete _window$axios$default3['Authorization'];\n};","map":{"version":3,"names":["isTokenExpired","token","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","getTokenExpirationTime","clearAuthData","_window$axios","_window$axios$default","_window$axios$default2","_window$axios$default3","localStorage","removeItem","window","axios","defaults","headers","common"],"sources":["D:/OA (sw)/frontend/src/utils/tokenUtils.js"],"sourcesContent":["// Token utility functions\r\nexport const isTokenExpired = (token) => {\r\n  if (!token) return true;\r\n  \r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    const currentTime = Date.now() / 1000;\r\n    \r\n    // Check if token is expired (with 5 minute buffer)\r\n    return payload.exp < (currentTime + 300);\r\n  } catch (error) {\r\n    console.error('Error parsing token:', error);\r\n    return true;\r\n  }\r\n};\r\n\r\nexport const getTokenExpirationTime = (token) => {\r\n  if (!token) return null;\r\n  \r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    return new Date(payload.exp * 1000);\r\n  } catch (error) {\r\n    console.error('Error parsing token:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const clearAuthData = () => {\r\n  localStorage.removeItem('token');\r\n  delete window.axios?.defaults?.headers?.common?.['Authorization'];\r\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAIC,KAAK,IAAK;EACvC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;;IAErC;IACA,OAAOP,OAAO,CAACQ,GAAG,GAAIH,WAAW,GAAG,GAAI;EAC1C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAIZ,KAAK,IAAK;EAC/C,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAO,IAAIE,IAAI,CAACN,OAAO,CAACQ,GAAG,GAAG,IAAI,CAAC;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAA,IAAAC,aAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;EACjCC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChC,CAAAL,aAAA,GAAOM,MAAM,CAACC,KAAK,cAAAP,aAAA,sBAAAC,qBAAA,GAAZD,aAAA,CAAcQ,QAAQ,cAAAP,qBAAA,sBAAAC,sBAAA,GAAtBD,qBAAA,CAAwBQ,OAAO,cAAAP,sBAAA,sBAAAC,sBAAA,GAA/BD,sBAAA,CAAiCQ,MAAM,cAAAP,sBAAA,qBAA9C,OAAOA,sBAAA,CAA0C,eAAe,CAAC;AACnE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}