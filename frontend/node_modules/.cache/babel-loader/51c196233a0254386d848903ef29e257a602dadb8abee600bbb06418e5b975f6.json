{"ast":null,"code":"var _jsxFileName = \"D:\\\\OA (sw)\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { API_ENDPOINTS } from '../config/api';\nimport { isTokenExpired, clearAuthData } from '../utils/tokenUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Debug effect to track user state changes\n  useEffect(() => {\n    console.log('AuthContext: User state changed:', user);\n  }, [user]);\n\n  // Set up axios interceptor for handling token expiration\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        // Token expired or invalid\n        console.log('Token expired, clearing auth data');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setUser(null);\n\n        // Only show toast if it's not during initial load\n        if (!loading) {\n          toast.error('Session expired. Please login again.');\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, [loading]);\n\n  // Set up axios defaults and check token validity\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    console.log('AuthContext: Initial setup - token exists:', !!token);\n    if (token) {\n      // Check if token is expired before using it\n      if (isTokenExpired(token)) {\n        console.log('Token is expired, clearing auth data');\n        clearAuthData();\n        setUser(null);\n        setLoading(false);\n        toast.error('Your session has expired. Please login again.');\n      } else {\n        console.log('Token is valid, setting up axios and fetching user');\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        fetchUser();\n      }\n    } else {\n      console.log('No token found, setting loading to false');\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      console.log('AuthContext: Fetching user...');\n      console.log('AuthContext: Token exists:', !!localStorage.getItem('token'));\n      console.log('AuthContext: Axios auth header:', axios.defaults.headers.common['Authorization']);\n      const response = await axios.get(API_ENDPOINTS.ME);\n      console.log('AuthContext: User response:', response.data);\n      if (response.data && response.data.user) {\n        console.log('AuthContext: Setting user:', response.data.user);\n        setUser(response.data.user);\n        console.log('AuthContext: User set successfully');\n      } else {\n        console.error('AuthContext: Invalid response format:', response.data);\n        setUser(null);\n      }\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4;\n      console.error('AuthContext: Fetch user error:', error);\n      console.error('AuthContext: Error response:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('AuthContext: Error status:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status);\n\n      // Don't handle 401 here as the interceptor will handle it\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) !== 401) {\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        setUser(null);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.LOGIN, {\n        email,\n        password\n      });\n\n      // Check if login requires email verification\n      if (response.data.requiresVerification) {\n        toast.error(response.data.message);\n        return {\n          success: false,\n          requiresVerification: true,\n          email: response.data.email\n        };\n      }\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      let message = 'Login failed';\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 429) {\n        message = 'Too many login attempts. Please wait a moment and try again.';\n      } else if ((_error$response6 = error.response) !== null && _error$response6 !== void 0 && (_error$response6$data = _error$response6.data) !== null && _error$response6$data !== void 0 && _error$response6$data.message) {\n        message = error.response.data.message;\n      }\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\n\n      // Check if registration requires email verification\n      if (response.data.requiresVerification) {\n        toast.success(response.data.message);\n        return {\n          success: true,\n          requiresVerification: true,\n          email: response.data.email\n        };\n      }\n\n      // Old flow for backward compatibility\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put(API_ENDPOINTS.PROFILE, profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      const message = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const verifyEmail = async token => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.VERIFY_EMAIL, {\n        token\n      });\n\n      // Auto-login after verification\n      const {\n        token: jwtToken,\n        user\n      } = response.data;\n      localStorage.setItem('token', jwtToken);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\n      setUser(user);\n      toast.success(response.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      const message = ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Email verification failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const resendVerification = async email => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.RESEND_VERIFICATION, {\n        email\n      });\n      toast.success(response.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      const message = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || 'Failed to resend verification email';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const forgotPassword = async email => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.FORGOT_PASSWORD, {\n        email\n      });\n      toast.success(response.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      const message = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Failed to send password reset email';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const resetPassword = async (token, newPassword) => {\n    try {\n      const response = await axios.post(API_ENDPOINTS.RESET_PASSWORD, {\n        token,\n        newPassword\n      });\n      toast.success(response.data.message);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response10, _error$response10$dat;\n      const message = ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.message) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Yr74guu2eMMic1x5VyZGzAPjSGM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","API_ENDPOINTS","isTokenExpired","clearAuthData","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","console","log","interceptor","interceptors","response","use","error","_error$response","status","localStorage","removeItem","defaults","headers","common","Promise","reject","eject","token","getItem","fetchUser","get","ME","data","_error$response2","_error$response3","_error$response4","login","email","password","post","LOGIN","requiresVerification","message","success","setItem","_error$response5","_error$response6","_error$response6$data","register","userData","REGISTER","_error$response7","_error$response7$data","logout","updateProfile","profileData","put","PROFILE","_error$response8","_error$response8$data","verifyEmail","VERIFY_EMAIL","jwtToken","_error$response9","_error$response9$data","resendVerification","RESEND_VERIFICATION","_error$response0","_error$response0$data","forgotPassword","FORGOT_PASSWORD","_error$response1","_error$response1$data","resetPassword","newPassword","RESET_PASSWORD","_error$response10","_error$response10$dat","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/OA (sw)/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { API_ENDPOINTS } from '../config/api';\r\nimport { isTokenExpired, clearAuthData } from '../utils/tokenUtils';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Debug effect to track user state changes\r\n  useEffect(() => {\r\n    console.log('AuthContext: User state changed:', user);\r\n  }, [user]);\r\n\r\n  // Set up axios interceptor for handling token expiration\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          // Token expired or invalid\r\n          console.log('Token expired, clearing auth data');\r\n          localStorage.removeItem('token');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n          setUser(null);\r\n          \r\n          // Only show toast if it's not during initial load\r\n          if (!loading) {\r\n            toast.error('Session expired. Please login again.');\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.response.eject(interceptor);\r\n    };\r\n  }, [loading]);\r\n\r\n  // Set up axios defaults and check token validity\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('AuthContext: Initial setup - token exists:', !!token);\r\n    \r\n    if (token) {\r\n      // Check if token is expired before using it\r\n      if (isTokenExpired(token)) {\r\n        console.log('Token is expired, clearing auth data');\r\n        clearAuthData();\r\n        setUser(null);\r\n        setLoading(false);\r\n        toast.error('Your session has expired. Please login again.');\r\n      } else {\r\n        console.log('Token is valid, setting up axios and fetching user');\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        fetchUser();\r\n      }\r\n    } else {\r\n      console.log('No token found, setting loading to false');\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUser = async () => {\r\n    try {\r\n      console.log('AuthContext: Fetching user...');\r\n      console.log('AuthContext: Token exists:', !!localStorage.getItem('token'));\r\n      console.log('AuthContext: Axios auth header:', axios.defaults.headers.common['Authorization']);\r\n      \r\n      const response = await axios.get(API_ENDPOINTS.ME);\r\n      console.log('AuthContext: User response:', response.data);\r\n      \r\n      if (response.data && response.data.user) {\r\n        console.log('AuthContext: Setting user:', response.data.user);\r\n        setUser(response.data.user);\r\n        console.log('AuthContext: User set successfully');\r\n      } else {\r\n        console.error('AuthContext: Invalid response format:', response.data);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('AuthContext: Fetch user error:', error);\r\n      console.error('AuthContext: Error response:', error.response?.data);\r\n      console.error('AuthContext: Error status:', error.response?.status);\r\n      \r\n      // Don't handle 401 here as the interceptor will handle it\r\n      if (error.response?.status !== 401) {\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['Authorization'];\r\n        setUser(null);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.LOGIN, { email, password });\r\n      \r\n      // Check if login requires email verification\r\n      if (response.data.requiresVerification) {\r\n        toast.error(response.data.message);\r\n        return { success: false, requiresVerification: true, email: response.data.email };\r\n      }\r\n      \r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      let message = 'Login failed';\r\n      \r\n      if (error.response?.status === 429) {\r\n        message = 'Too many login attempts. Please wait a moment and try again.';\r\n      } else if (error.response?.data?.message) {\r\n        message = error.response.data.message;\r\n      }\r\n      \r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.REGISTER, userData);\r\n      \r\n      // Check if registration requires email verification\r\n      if (response.data.requiresVerification) {\r\n        toast.success(response.data.message);\r\n        return { success: true, requiresVerification: true, email: response.data.email };\r\n      }\r\n      \r\n      // Old flow for backward compatibility\r\n      const { token, user } = response.data;\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put(API_ENDPOINTS.PROFILE, profileData);\r\n      setUser(response.data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async (token) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.VERIFY_EMAIL, { token });\r\n      \r\n      // Auto-login after verification\r\n      const { token: jwtToken, user } = response.data;\r\n      localStorage.setItem('token', jwtToken);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${jwtToken}`;\r\n      setUser(user);\r\n      \r\n      toast.success(response.data.message);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Email verification failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const resendVerification = async (email) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.RESEND_VERIFICATION, { email });\r\n      toast.success(response.data.message);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to resend verification email';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.FORGOT_PASSWORD, { email });\r\n      toast.success(response.data.message);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Failed to send password reset email';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, newPassword) => {\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.RESET_PASSWORD, { token, newPassword });\r\n      toast.success(response.data.message);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password reset failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}