{"ast":null,"code":"var _jsxFileName = \"D:\\\\OA (sw)\\\\frontend\\\\src\\\\components\\\\Admin\\\\CreateTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { API_ENDPOINTS } from '../../config/api';\nimport { Plus, Trash2, Upload, Save, ArrowLeft, Clock, FileText, Image as ImageIcon } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTest = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [testData, setTestData] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    duration: 60,\n    enableCamera: true,\n    enableFullScreen: true,\n    preventCopyPaste: true,\n    preventRightClick: true,\n    sections: []\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Check if user is admin\n  useEffect(() => {\n    if (user && user.role !== 'admin') {\n      toast.error('Access denied. Admin only.');\n      navigate('/');\n    }\n  }, [user, navigate]);\n  const sectionTypes = ['Aptitude', 'Technical', 'Coding', 'Logical Reasoning', 'English', 'Domain Specific'];\n  const questionTypes = [{\n    value: 'single-correct',\n    label: 'Single Correct Answer'\n  }, {\n    value: 'multi-correct',\n    label: 'Multiple Correct Answers'\n  }, {\n    value: 'coding',\n    label: 'Coding Problem'\n  }];\n  const addSection = () => {\n    const newSection = {\n      name: 'Aptitude',\n      timeLimit: 30,\n      numberOfQuestions: 10,\n      instructions: '',\n      order: testData.sections.length,\n      questions: []\n    };\n    setTestData(prev => ({\n      ...prev,\n      sections: [...prev.sections, newSection]\n    }));\n  };\n  const updateSection = (sectionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => index === sectionIndex ? {\n        ...section,\n        [field]: value\n      } : section)\n    }));\n  };\n  const removeSection = sectionIndex => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\n    }));\n  };\n  const addQuestion = sectionIndex => {\n    const newQuestion = {\n      questionText: 'Enter your question here',\n      questionImage: '',\n      questionType: 'single-correct',\n      options: [{\n        text: 'Option A',\n        isCorrect: true\n      }, {\n        text: 'Option B',\n        isCorrect: false\n      }, {\n        text: 'Option C',\n        isCorrect: false\n      }, {\n        text: 'Option D',\n        isCorrect: false\n      }],\n      codingDetails: {\n        problemStatement: 'Enter problem statement here',\n        inputFormat: 'Enter input format',\n        outputFormat: 'Enter output format',\n        examples: [{\n          input: 'Sample input',\n          output: 'Sample output',\n          explanation: 'Sample explanation'\n        }],\n        constraints: 'Enter constraints',\n        testCases: [{\n          input: 'Test input',\n          output: 'Expected output',\n          isHidden: false\n        }],\n        timeLimit: 1000,\n        memoryLimit: 256\n      },\n      points: 1,\n      difficulty: 'medium'\n    };\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => index === sectionIndex ? {\n        ...section,\n        questions: [...section.questions, newQuestion]\n      } : section)\n    }));\n  };\n  const updateQuestion = (sectionIndex, questionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.map((question, qIndex) => qIndex === questionIndex ? {\n          ...question,\n          [field]: value\n        } : question)\n      } : section)\n    }));\n  };\n  const updateQuestionOption = (sectionIndex, questionIndex, optionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.map((question, qIndex) => qIndex === questionIndex ? {\n          ...question,\n          options: question.options.map((option, oIndex) => oIndex === optionIndex ? {\n            ...option,\n            [field]: value\n          } : option)\n        } : question)\n      } : section)\n    }));\n  };\n  const removeQuestion = (sectionIndex, questionIndex) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.filter((_, qIndex) => qIndex !== questionIndex)\n      } : section)\n    }));\n  };\n  const uploadImage = async (file, sectionIndex, questionIndex) => {\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post(API_ENDPOINTS.ADMIN_UPLOAD_IMAGE, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      updateQuestion(sectionIndex, questionIndex, 'questionImage', response.data.imageUrl);\n      toast.success('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      toast.error('Failed to upload image');\n    }\n  };\n  const addExample = (sectionIndex, questionIndex) => {\n    const question = testData.sections[sectionIndex].questions[questionIndex];\n    const newExamples = [...question.codingDetails.examples, {\n      input: '',\n      output: '',\n      explanation: ''\n    }];\n    updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n      ...question.codingDetails,\n      examples: newExamples\n    });\n  };\n  const addTestCase = (sectionIndex, questionIndex) => {\n    const question = testData.sections[sectionIndex].questions[questionIndex];\n    const newTestCases = [...question.codingDetails.testCases, {\n      input: '',\n      output: '',\n      isHidden: false\n    }];\n    updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n      ...question.codingDetails,\n      testCases: newTestCases\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (testData.sections.length === 0) {\n      toast.error('Please add at least one section');\n      return;\n    }\n\n    // Validate sections have questions\n    for (let section of testData.sections) {\n      if (section.questions.length === 0) {\n        toast.error(`Section \"${section.name}\" must have at least one question`);\n        return;\n      }\n\n      // Validate each question\n      for (let question of section.questions) {\n        if (!question.questionText || question.questionText.trim() === '') {\n          toast.error(`Question in section \"${section.name}\" must have text`);\n          return;\n        }\n\n        // Validate MCQ questions have at least one correct option\n        if (question.questionType !== 'coding') {\n          const hasCorrectOption = question.options.some(option => option.isCorrect);\n          if (!hasCorrectOption) {\n            toast.error(`Question \"${question.questionText}\" must have at least one correct option`);\n            return;\n          }\n\n          // Validate option text is not empty\n          for (let option of question.options) {\n            if (!option.text || option.text.trim() === '') {\n              toast.error(`All options for question \"${question.questionText}\" must have text`);\n              return;\n            }\n          }\n        }\n      }\n    }\n\n    // Validate required fields\n    if (!testData.title || !testData.startDate || !testData.endDate || !testData.duration) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    // Log the data being sent for debugging\n    console.log('Sending test data:', testData);\n\n    // Clean up the data before sending (remove empty strings, ensure proper types)\n    const cleanTestData = {\n      ...testData,\n      title: testData.title.trim(),\n      description: testData.description.trim(),\n      duration: parseInt(testData.duration),\n      startDate: testData.startDate,\n      endDate: testData.endDate,\n      sections: testData.sections.map(section => ({\n        ...section,\n        name: section.name.trim(),\n        timeLimit: parseInt(section.timeLimit),\n        numberOfQuestions: parseInt(section.numberOfQuestions),\n        order: parseInt(section.order),\n        instructions: section.instructions.trim(),\n        questions: section.questions.map(question => ({\n          ...question,\n          questionText: question.questionText.trim(),\n          points: parseInt(question.points),\n          options: question.questionType !== 'coding' ? question.options.map(option => ({\n            ...option,\n            text: option.text.trim()\n          })) : [],\n          codingDetails: question.questionType === 'coding' ? {\n            ...question.codingDetails,\n            problemStatement: question.codingDetails.problemStatement.trim(),\n            inputFormat: question.codingDetails.inputFormat.trim(),\n            outputFormat: question.codingDetails.outputFormat.trim(),\n            constraints: question.codingDetails.constraints.trim(),\n            examples: question.codingDetails.examples.map(example => ({\n              ...example,\n              input: example.input.trim(),\n              output: example.output.trim(),\n              explanation: example.explanation.trim()\n            })),\n            testCases: question.codingDetails.testCases.map(testCase => ({\n              ...testCase,\n              input: testCase.input.trim(),\n              output: testCase.output.trim()\n            }))\n          } : undefined\n        }))\n      }))\n    };\n    console.log('Cleaned test data:', cleanTestData);\n    setLoading(true);\n    try {\n      const response = await axios.post(API_ENDPOINTS.ADMIN_TESTS, cleanTestData);\n      toast.success('Test created successfully');\n      navigate('/admin');\n    } catch (error) {\n      console.error('Error creating test:', error);\n      if (error.response) {\n        console.error('Error response:', error.response.data);\n        toast.error(`Failed to create test: ${error.response.data.message || 'Unknown error'}`);\n      } else {\n        toast.error('Failed to create test: Network error');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/admin'),\n              className: \"btn-secondary flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: \"Create New Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            disabled: loading,\n            className: \"btn-primary flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: loading ? 'Creating...' : 'Create Test'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-6\",\n            children: \"Test Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Test Title *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                className: \"input-field\",\n                value: testData.title,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  title: e.target.value\n                })),\n                placeholder: \"Enter test title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Duration (minutes) *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                required: true,\n                min: \"1\",\n                className: \"input-field\",\n                value: testData.duration,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  duration: parseInt(e.target.value)\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"3\",\n              className: \"input-field\",\n              value: testData.description,\n              onChange: e => setTestData(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"Enter test description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Start Date & Time *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                required: true,\n                className: \"input-field\",\n                value: testData.startDate,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  startDate: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"End Date & Time *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                required: true,\n                className: \"input-field\",\n                value: testData.endDate,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  endDate: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-4\",\n              children: \"Proctoring Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.enableCamera,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    enableCamera: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Enable Camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.enableFullScreen,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    enableFullScreen: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Full Screen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.preventCopyPaste,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    preventCopyPaste: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Prevent Copy/Paste\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.preventRightClick,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    preventRightClick: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Prevent Right Click\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Test Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addSection,\n              className: \"btn-primary flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Add Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), testData.sections.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"mx-auto h-12 w-12 text-gray-400 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No sections added yet. Click \\\"Add Section\\\" to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-8\",\n            children: testData.sections.map((section, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: [\"Section \", sectionIndex + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeSection(sectionIndex),\n                  className: \"text-red-600 hover:text-red-800\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Section Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field\",\n                    value: section.name,\n                    onChange: e => updateSection(sectionIndex, 'name', e.target.value),\n                    children: sectionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: type,\n                      children: type\n                    }, type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Time Limit (minutes)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 532,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"1\",\n                    className: \"input-field\",\n                    value: section.timeLimit,\n                    onChange: e => updateSection(sectionIndex, 'timeLimit', parseInt(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Number of Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"1\",\n                    className: \"input-field\",\n                    value: section.numberOfQuestions,\n                    onChange: e => updateSection(sectionIndex, 'numberOfQuestions', parseInt(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"2\",\n                  className: \"input-field\",\n                  value: section.instructions,\n                  onChange: e => updateSection(sectionIndex, 'instructions', e.target.value),\n                  placeholder: \"Enter section instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-t pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium\",\n                    children: [\"Questions (\", section.questions.length, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => addQuestion(sectionIndex),\n                    className: \"btn-secondary flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      className: \"h-4 w-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 580,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Add Question\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 581,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 575,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this), section.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 rounded-lg p-4 mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"font-medium\",\n                      children: [\"Question \", questionIndex + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => removeQuestion(sectionIndex, questionIndex),\n                      className: \"text-red-600 hover:text-red-800\",\n                      children: /*#__PURE__*/_jsxDEV(Trash2, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                        children: \"Question Text *\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        rows: \"3\",\n                        required: true,\n                        className: \"input-field\",\n                        value: question.questionText,\n                        onChange: e => updateQuestion(sectionIndex, questionIndex, 'questionText', e.target.value),\n                        placeholder: \"Enter question text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Question Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 615,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"input-field\",\n                          value: question.questionType,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'questionType', e.target.value),\n                          children: questionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: type.value,\n                            children: type.label\n                          }, type.value, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 624,\n                            columnNumber: 37\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 618,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Points\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 630,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          min: \"1\",\n                          className: \"input-field\",\n                          value: question.points,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'points', parseInt(e.target.value))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 633,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Difficulty\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 643,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"input-field\",\n                          value: question.difficulty,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'difficulty', e.target.value),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"easy\",\n                            children: \"Easy\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 651,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"medium\",\n                            children: \"Medium\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 652,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"hard\",\n                            children: \"Hard\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 653,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 646,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 642,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                        children: \"Question Image (Optional)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center space-x-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          accept: \"image/*\",\n                          onChange: e => {\n                            if (e.target.files[0]) {\n                              uploadImage(e.target.files[0], sectionIndex, questionIndex);\n                            }\n                          },\n                          className: \"hidden\",\n                          id: `image-${sectionIndex}-${questionIndex}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 664,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: `image-${sectionIndex}-${questionIndex}`,\n                          className: \"btn-secondary flex items-center space-x-2 cursor-pointer\",\n                          children: [/*#__PURE__*/_jsxDEV(Upload, {\n                            className: \"h-4 w-4\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 679,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Upload Image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 680,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 675,\n                          columnNumber: 33\n                        }, this), question.questionImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: question.questionImage,\n                          alt: \"Question\",\n                          className: \"h-16 w-16 object-cover rounded\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 683,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 29\n                    }, this), question.questionType !== 'coding' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-2\",\n                        children: \"Answer Options\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 695,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-2\",\n                        children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            checked: option.isCorrect,\n                            onChange: e => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'isCorrect', e.target.checked),\n                            className: \"rounded\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 701,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium w-8\",\n                            children: [String.fromCharCode(65 + optionIndex), \".\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 707,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            className: \"input-field flex-1\",\n                            value: option.text,\n                            onChange: e => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'text', e.target.value),\n                            placeholder: `Option ${String.fromCharCode(65 + optionIndex)}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 710,\n                            columnNumber: 39\n                          }, this)]\n                        }, optionIndex, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 700,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 694,\n                      columnNumber: 31\n                    }, this), question.questionType === 'coding' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-4 border-t pt-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        className: \"font-medium\",\n                        children: \"Coding Problem Details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Input Format\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 730,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            rows: \"3\",\n                            className: \"input-field\",\n                            value: question.codingDetails.inputFormat,\n                            onChange: e => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                              ...question.codingDetails,\n                              inputFormat: e.target.value\n                            }),\n                            placeholder: \"Describe input format\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 733,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 729,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                            children: \"Output Format\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 746,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                            rows: \"3\",\n                            className: \"input-field\",\n                            value: question.codingDetails.outputFormat,\n                            onChange: e => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                              ...question.codingDetails,\n                              outputFormat: e.target.value\n                            }),\n                            placeholder: \"Describe output format\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 749,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 745,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 728,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Constraints\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 763,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                          rows: \"2\",\n                          className: \"input-field\",\n                          value: question.codingDetails.constraints,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                            ...question.codingDetails,\n                            constraints: e.target.value\n                          }),\n                          placeholder: \"Enter constraints\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 766,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 762,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex justify-between items-center mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700\",\n                            children: \"Examples\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 781,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: () => addExample(sectionIndex, questionIndex),\n                            className: \"text-primary-600 hover:text-primary-800 text-sm\",\n                            children: \"+ Add Example\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 784,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 780,\n                          columnNumber: 35\n                        }, this), question.codingDetails.examples.map((example, exampleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-white p-3 rounded border mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                                children: \"Input\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 797,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                rows: \"2\",\n                                className: \"input-field text-sm\",\n                                value: example.input,\n                                onChange: e => {\n                                  const newExamples = [...question.codingDetails.examples];\n                                  newExamples[exampleIndex].input = e.target.value;\n                                  updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                    ...question.codingDetails,\n                                    examples: newExamples\n                                  });\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 800,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 796,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                                children: \"Output\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 815,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                rows: \"2\",\n                                className: \"input-field text-sm\",\n                                value: example.output,\n                                onChange: e => {\n                                  const newExamples = [...question.codingDetails.examples];\n                                  newExamples[exampleIndex].output = e.target.value;\n                                  updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                    ...question.codingDetails,\n                                    examples: newExamples\n                                  });\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 818,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 814,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 795,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"mt-2\",\n                            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"block text-xs font-medium text-gray-600 mb-1\",\n                              children: \"Explanation (Optional)\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 834,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                              type: \"text\",\n                              className: \"input-field text-sm\",\n                              value: example.explanation,\n                              onChange: e => {\n                                const newExamples = [...question.codingDetails.examples];\n                                newExamples[exampleIndex].explanation = e.target.value;\n                                updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                  ...question.codingDetails,\n                                  examples: newExamples\n                                });\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 837,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 833,\n                            columnNumber: 39\n                          }, this)]\n                        }, exampleIndex, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 794,\n                          columnNumber: 37\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 779,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex justify-between items-center mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"block text-sm font-medium text-gray-700\",\n                            children: \"Test Cases\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 858,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                            type: \"button\",\n                            onClick: () => addTestCase(sectionIndex, questionIndex),\n                            className: \"text-primary-600 hover:text-primary-800 text-sm\",\n                            children: \"+ Add Test Case\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 861,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 857,\n                          columnNumber: 35\n                        }, this), question.codingDetails.testCases.map((testCase, testCaseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"bg-white p-3 rounded border mb-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                                children: \"Input\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 874,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                rows: \"2\",\n                                className: \"input-field text-sm\",\n                                value: testCase.input,\n                                onChange: e => {\n                                  const newTestCases = [...question.codingDetails.testCases];\n                                  newTestCases[testCaseIndex].input = e.target.value;\n                                  updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                    ...question.codingDetails,\n                                    testCases: newTestCases\n                                  });\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 877,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 873,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"block text-xs font-medium text-gray-600 mb-1\",\n                                children: \"Expected Output\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 892,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                                rows: \"2\",\n                                className: \"input-field text-sm\",\n                                value: testCase.output,\n                                onChange: e => {\n                                  const newTestCases = [...question.codingDetails.testCases];\n                                  newTestCases[testCaseIndex].output = e.target.value;\n                                  updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                    ...question.codingDetails,\n                                    testCases: newTestCases\n                                  });\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 895,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 891,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 872,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"mt-2\",\n                            children: /*#__PURE__*/_jsxDEV(\"label\", {\n                              className: \"flex items-center space-x-2\",\n                              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                type: \"checkbox\",\n                                checked: testCase.isHidden,\n                                onChange: e => {\n                                  const newTestCases = [...question.codingDetails.testCases];\n                                  newTestCases[testCaseIndex].isHidden = e.target.checked;\n                                  updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\n                                    ...question.codingDetails,\n                                    testCases: newTestCases\n                                  });\n                                },\n                                className: \"rounded\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 912,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"text-xs text-gray-600\",\n                                children: \"Hidden Test Case\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 925,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 911,\n                              columnNumber: 41\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 910,\n                            columnNumber: 39\n                          }, this)]\n                        }, testCaseIndex, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 871,\n                          columnNumber: 37\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 856,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 27\n                  }, this)]\n                }, questionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this)]\n            }, sectionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTest, \"zaTGElvSK1d5y7RA1AMl+j5RacU=\", true, function () {\n  return [useNavigate];\n});\n_c = CreateTest;\nexport default CreateTest;\nvar _c;\n$RefreshReg$(_c, \"CreateTest\");","map":{"version":3,"names":["React","useState","useNavigate","axios","toast","API_ENDPOINTS","Plus","Trash2","Upload","Save","ArrowLeft","Clock","FileText","Image","ImageIcon","jsxDEV","_jsxDEV","CreateTest","_s","navigate","user","useAuth","testData","setTestData","title","description","startDate","endDate","duration","enableCamera","enableFullScreen","preventCopyPaste","preventRightClick","sections","loading","setLoading","useEffect","role","error","sectionTypes","questionTypes","value","label","addSection","newSection","name","timeLimit","numberOfQuestions","instructions","order","length","questions","prev","updateSection","sectionIndex","field","map","section","index","removeSection","filter","_","addQuestion","newQuestion","questionText","questionImage","questionType","options","text","isCorrect","codingDetails","problemStatement","inputFormat","outputFormat","examples","input","output","explanation","constraints","testCases","isHidden","memoryLimit","points","difficulty","updateQuestion","questionIndex","sIndex","question","qIndex","updateQuestionOption","optionIndex","option","oIndex","removeQuestion","uploadImage","file","formData","FormData","append","response","post","ADMIN_UPLOAD_IMAGE","headers","data","imageUrl","success","console","addExample","newExamples","addTestCase","newTestCases","handleSubmit","e","preventDefault","trim","hasCorrectOption","some","log","cleanTestData","parseInt","example","testCase","undefined","ADMIN_TESTS","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onSubmit","type","required","onChange","target","placeholder","min","rows","checked","accept","files","id","htmlFor","src","alt","String","fromCharCode","exampleIndex","testCaseIndex","_c","$RefreshReg$"],"sources":["D:/OA (sw)/frontend/src/components/Admin/CreateTest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { API_ENDPOINTS } from '../../config/api';\r\nimport { \r\n  Plus, \r\n  Trash2, \r\n  Upload, \r\n  Save, \r\n  ArrowLeft,\r\n  Clock,\r\n  FileText,\r\n  Image as ImageIcon\r\n} from 'lucide-react';\r\n\r\nconst CreateTest = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [testData, setTestData] = useState({\r\n    title: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    duration: 60,\r\n    enableCamera: true,\r\n    enableFullScreen: true,\r\n    preventCopyPaste: true,\r\n    preventRightClick: true,\r\n    sections: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Check if user is admin\r\n  useEffect(() => {\r\n    if (user && user.role !== 'admin') {\r\n      toast.error('Access denied. Admin only.');\r\n      navigate('/');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const sectionTypes = [\r\n    'Aptitude',\r\n    'Technical',\r\n    'Coding',\r\n    'Logical Reasoning',\r\n    'English',\r\n    'Domain Specific'\r\n  ];\r\n\r\n  const questionTypes = [\r\n    { value: 'single-correct', label: 'Single Correct Answer' },\r\n    { value: 'multi-correct', label: 'Multiple Correct Answers' },\r\n    { value: 'coding', label: 'Coding Problem' }\r\n  ];\r\n\r\n  const addSection = () => {\r\n    const newSection = {\r\n      name: 'Aptitude',\r\n      timeLimit: 30,\r\n      numberOfQuestions: 10,\r\n      instructions: '',\r\n      order: testData.sections.length,\r\n      questions: []\r\n    };\r\n    \r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: [...prev.sections, newSection]\r\n    }));\r\n  };\r\n\r\n  const updateSection = (sectionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) => \r\n        index === sectionIndex ? { ...section, [field]: value } : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeSection = (sectionIndex) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\r\n    }));\r\n  };\r\n\r\n  const addQuestion = (sectionIndex) => {\r\n    const newQuestion = {\r\n      questionText: 'Enter your question here',\r\n      questionImage: '',\r\n      questionType: 'single-correct',\r\n      options: [\r\n        { text: 'Option A', isCorrect: true },\r\n        { text: 'Option B', isCorrect: false },\r\n        { text: 'Option C', isCorrect: false },\r\n        { text: 'Option D', isCorrect: false }\r\n      ],\r\n      codingDetails: {\r\n        problemStatement: 'Enter problem statement here',\r\n        inputFormat: 'Enter input format',\r\n        outputFormat: 'Enter output format',\r\n        examples: [{ input: 'Sample input', output: 'Sample output', explanation: 'Sample explanation' }],\r\n        constraints: 'Enter constraints',\r\n        testCases: [{ input: 'Test input', output: 'Expected output', isHidden: false }],\r\n        timeLimit: 1000,\r\n        memoryLimit: 256\r\n      },\r\n      points: 1,\r\n      difficulty: 'medium'\r\n    };\r\n\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) => \r\n        index === sectionIndex \r\n          ? { ...section, questions: [...section.questions, newQuestion] }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateQuestion = (sectionIndex, questionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => \r\n        sIndex === sectionIndex \r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex ? { ...question, [field]: value } : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateQuestionOption = (sectionIndex, questionIndex, optionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => \r\n        sIndex === sectionIndex \r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex \r\n                  ? {\r\n                      ...question,\r\n                      options: question.options.map((option, oIndex) =>\r\n                        oIndex === optionIndex ? { ...option, [field]: value } : option\r\n                      )\r\n                    }\r\n                  : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeQuestion = (sectionIndex, questionIndex) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => \r\n        sIndex === sectionIndex \r\n          ? {\r\n              ...section,\r\n              questions: section.questions.filter((_, qIndex) => qIndex !== questionIndex)\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const uploadImage = async (file, sectionIndex, questionIndex) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.ADMIN_UPLOAD_IMAGE, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      \r\n      updateQuestion(sectionIndex, questionIndex, 'questionImage', response.data.imageUrl);\r\n      toast.success('Image uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      toast.error('Failed to upload image');\r\n    }\r\n  };\r\n\r\n  const addExample = (sectionIndex, questionIndex) => {\r\n    const question = testData.sections[sectionIndex].questions[questionIndex];\r\n    const newExamples = [...question.codingDetails.examples, { input: '', output: '', explanation: '' }];\r\n    \r\n    updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n      ...question.codingDetails,\r\n      examples: newExamples\r\n    });\r\n  };\r\n\r\n  const addTestCase = (sectionIndex, questionIndex) => {\r\n    const question = testData.sections[sectionIndex].questions[questionIndex];\r\n    const newTestCases = [...question.codingDetails.testCases, { input: '', output: '', isHidden: false }];\r\n    \r\n    updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n      ...question.codingDetails,\r\n      testCases: newTestCases\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (testData.sections.length === 0) {\r\n      toast.error('Please add at least one section');\r\n      return;\r\n    }\r\n\r\n    // Validate sections have questions\r\n    for (let section of testData.sections) {\r\n      if (section.questions.length === 0) {\r\n        toast.error(`Section \"${section.name}\" must have at least one question`);\r\n        return;\r\n      }\r\n      \r\n      // Validate each question\r\n      for (let question of section.questions) {\r\n        if (!question.questionText || question.questionText.trim() === '') {\r\n          toast.error(`Question in section \"${section.name}\" must have text`);\r\n          return;\r\n        }\r\n        \r\n        // Validate MCQ questions have at least one correct option\r\n        if (question.questionType !== 'coding') {\r\n          const hasCorrectOption = question.options.some(option => option.isCorrect);\r\n          if (!hasCorrectOption) {\r\n            toast.error(`Question \"${question.questionText}\" must have at least one correct option`);\r\n            return;\r\n          }\r\n          \r\n          // Validate option text is not empty\r\n          for (let option of question.options) {\r\n            if (!option.text || option.text.trim() === '') {\r\n              toast.error(`All options for question \"${question.questionText}\" must have text`);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Validate required fields\r\n    if (!testData.title || !testData.startDate || !testData.endDate || !testData.duration) {\r\n      toast.error('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    // Log the data being sent for debugging\r\n    console.log('Sending test data:', testData);\r\n\r\n    // Clean up the data before sending (remove empty strings, ensure proper types)\r\n    const cleanTestData = {\r\n      ...testData,\r\n      title: testData.title.trim(),\r\n      description: testData.description.trim(),\r\n      duration: parseInt(testData.duration),\r\n      startDate: testData.startDate,\r\n      endDate: testData.endDate,\r\n      sections: testData.sections.map(section => ({\r\n        ...section,\r\n        name: section.name.trim(),\r\n        timeLimit: parseInt(section.timeLimit),\r\n        numberOfQuestions: parseInt(section.numberOfQuestions),\r\n        order: parseInt(section.order),\r\n        instructions: section.instructions.trim(),\r\n        questions: section.questions.map(question => ({\r\n          ...question,\r\n          questionText: question.questionText.trim(),\r\n          points: parseInt(question.points),\r\n          options: question.questionType !== 'coding' ? question.options.map(option => ({\r\n            ...option,\r\n            text: option.text.trim()\r\n          })) : [],\r\n          codingDetails: question.questionType === 'coding' ? {\r\n            ...question.codingDetails,\r\n            problemStatement: question.codingDetails.problemStatement.trim(),\r\n            inputFormat: question.codingDetails.inputFormat.trim(),\r\n            outputFormat: question.codingDetails.outputFormat.trim(),\r\n            constraints: question.codingDetails.constraints.trim(),\r\n            examples: question.codingDetails.examples.map(example => ({\r\n              ...example,\r\n              input: example.input.trim(),\r\n              output: example.output.trim(),\r\n              explanation: example.explanation.trim()\r\n            })),\r\n            testCases: question.codingDetails.testCases.map(testCase => ({\r\n              ...testCase,\r\n              input: testCase.input.trim(),\r\n              output: testCase.output.trim()\r\n            }))\r\n          } : undefined\r\n        }))\r\n      }))\r\n    };\r\n\r\n    console.log('Cleaned test data:', cleanTestData);\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.ADMIN_TESTS, cleanTestData);\r\n      toast.success('Test created successfully');\r\n      navigate('/admin');\r\n    } catch (error) {\r\n      console.error('Error creating test:', error);\r\n      if (error.response) {\r\n        console.error('Error response:', error.response.data);\r\n        toast.error(`Failed to create test: ${error.response.data.message || 'Unknown error'}`);\r\n      } else {\r\n        toast.error('Failed to create test: Network error');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => navigate('/admin')}\r\n                className=\"btn-secondary flex items-center space-x-2\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                <span>Back</span>\r\n              </button>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">Create New Test</h1>\r\n            </div>\r\n            <button\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n              className=\"btn-primary flex items-center space-x-2\"\r\n            >\r\n              <Save className=\"h-4 w-4\" />\r\n              <span>{loading ? 'Creating...' : 'Create Test'}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n          {/* Basic Test Information */}\r\n          <div className=\"card\">\r\n            <h2 className=\"text-xl font-semibold mb-6\">Test Information</h2>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Test Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.title}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, title: e.target.value }))}\r\n                  placeholder=\"Enter test title\"\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Duration (minutes) *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  required\r\n                  min=\"1\"\r\n                  className=\"input-field\"\r\n                  value={testData.duration}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, duration: parseInt(e.target.value) }))}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                rows=\"3\"\r\n                className=\"input-field\"\r\n                value={testData.description}\r\n                onChange={(e) => setTestData(prev => ({ ...prev, description: e.target.value }))}\r\n                placeholder=\"Enter test description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Start Date & Time *\r\n                </label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.startDate}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, startDate: e.target.value }))}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  End Date & Time *\r\n                </label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.endDate}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, endDate: e.target.value }))}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Proctoring Settings */}\r\n            <div className=\"mt-6\">\r\n              <h3 className=\"text-lg font-medium mb-4\">Proctoring Settings</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.enableCamera}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, enableCamera: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Enable Camera</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.enableFullScreen}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, enableFullScreen: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Full Screen</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.preventCopyPaste}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, preventCopyPaste: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Prevent Copy/Paste</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.preventRightClick}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, preventRightClick: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Prevent Right Click</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sections */}\r\n          <div className=\"card\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <h2 className=\"text-xl font-semibold\">Test Sections</h2>\r\n              <button\r\n                type=\"button\"\r\n                onClick={addSection}\r\n                className=\"btn-primary flex items-center space-x-2\"\r\n              >\r\n                <Plus className=\"h-4 w-4\" />\r\n                <span>Add Section</span>\r\n              </button>\r\n            </div>\r\n\r\n            {testData.sections.length === 0 ? (\r\n              <div className=\"text-center py-12 text-gray-500\">\r\n                <FileText className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\r\n                <p>No sections added yet. Click \"Add Section\" to get started.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-8\">\r\n                {testData.sections.map((section, sectionIndex) => (\r\n                  <div key={sectionIndex} className=\"border border-gray-200 rounded-lg p-6\">\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                      <h3 className=\"text-lg font-medium\">Section {sectionIndex + 1}</h3>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeSection(sectionIndex)}\r\n                        className=\"text-red-600 hover:text-red-800\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Section Type\r\n                        </label>\r\n                        <select\r\n                          className=\"input-field\"\r\n                          value={section.name}\r\n                          onChange={(e) => updateSection(sectionIndex, 'name', e.target.value)}\r\n                        >\r\n                          {sectionTypes.map(type => (\r\n                            <option key={type} value={type}>{type}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Time Limit (minutes)\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          className=\"input-field\"\r\n                          value={section.timeLimit}\r\n                          onChange={(e) => updateSection(sectionIndex, 'timeLimit', parseInt(e.target.value))}\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Number of Questions\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          className=\"input-field\"\r\n                          value={section.numberOfQuestions}\r\n                          onChange={(e) => updateSection(sectionIndex, 'numberOfQuestions', parseInt(e.target.value))}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-4\">\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Instructions\r\n                      </label>\r\n                      <textarea\r\n                        rows=\"2\"\r\n                        className=\"input-field\"\r\n                        value={section.instructions}\r\n                        onChange={(e) => updateSection(sectionIndex, 'instructions', e.target.value)}\r\n                        placeholder=\"Enter section instructions\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Questions */}\r\n                    <div className=\"border-t pt-4\">\r\n                      <div className=\"flex justify-between items-center mb-4\">\r\n                        <h4 className=\"font-medium\">Questions ({section.questions.length})</h4>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => addQuestion(sectionIndex)}\r\n                          className=\"btn-secondary flex items-center space-x-2\"\r\n                        >\r\n                          <Plus className=\"h-4 w-4\" />\r\n                          <span>Add Question</span>\r\n                        </button>\r\n                      </div>\r\n\r\n                      {section.questions.map((question, questionIndex) => (\r\n                        <div key={questionIndex} className=\"bg-gray-50 rounded-lg p-4 mb-4\">\r\n                          <div className=\"flex justify-between items-center mb-4\">\r\n                            <h5 className=\"font-medium\">Question {questionIndex + 1}</h5>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeQuestion(sectionIndex, questionIndex)}\r\n                              className=\"text-red-600 hover:text-red-800\"\r\n                            >\r\n                              <Trash2 className=\"h-4 w-4\" />\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"space-y-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Question Text *\r\n                              </label>\r\n                              <textarea\r\n                                rows=\"3\"\r\n                                required\r\n                                className=\"input-field\"\r\n                                value={question.questionText}\r\n                                onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'questionText', e.target.value)}\r\n                                placeholder=\"Enter question text\"\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Question Type\r\n                                </label>\r\n                                <select\r\n                                  className=\"input-field\"\r\n                                  value={question.questionType}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'questionType', e.target.value)}\r\n                                >\r\n                                  {questionTypes.map(type => (\r\n                                    <option key={type.value} value={type.value}>{type.label}</option>\r\n                                  ))}\r\n                                </select>\r\n                              </div>\r\n                              \r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Points\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"1\"\r\n                                  className=\"input-field\"\r\n                                  value={question.points}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'points', parseInt(e.target.value))}\r\n                                />\r\n                              </div>\r\n                              \r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Difficulty\r\n                                </label>\r\n                                <select\r\n                                  className=\"input-field\"\r\n                                  value={question.difficulty}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'difficulty', e.target.value)}\r\n                                >\r\n                                  <option value=\"easy\">Easy</option>\r\n                                  <option value=\"medium\">Medium</option>\r\n                                  <option value=\"hard\">Hard</option>\r\n                                </select>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Image Upload */}\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Question Image (Optional)\r\n                              </label>\r\n                              <div className=\"flex items-center space-x-4\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  onChange={(e) => {\r\n                                    if (e.target.files[0]) {\r\n                                      uploadImage(e.target.files[0], sectionIndex, questionIndex);\r\n                                    }\r\n                                  }}\r\n                                  className=\"hidden\"\r\n                                  id={`image-${sectionIndex}-${questionIndex}`}\r\n                                />\r\n                                <label\r\n                                  htmlFor={`image-${sectionIndex}-${questionIndex}`}\r\n                                  className=\"btn-secondary flex items-center space-x-2 cursor-pointer\"\r\n                                >\r\n                                  <Upload className=\"h-4 w-4\" />\r\n                                  <span>Upload Image</span>\r\n                                </label>\r\n                                {question.questionImage && (\r\n                                  <img\r\n                                    src={question.questionImage}\r\n                                    alt=\"Question\"\r\n                                    className=\"h-16 w-16 object-cover rounded\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* MCQ Options */}\r\n                            {question.questionType !== 'coding' && (\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                  Answer Options\r\n                                </label>\r\n                                <div className=\"space-y-2\">\r\n                                  {question.options.map((option, optionIndex) => (\r\n                                    <div key={optionIndex} className=\"flex items-center space-x-2\">\r\n                                      <input\r\n                                        type=\"checkbox\"\r\n                                        checked={option.isCorrect}\r\n                                        onChange={(e) => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'isCorrect', e.target.checked)}\r\n                                        className=\"rounded\"\r\n                                      />\r\n                                      <span className=\"text-sm font-medium w-8\">\r\n                                        {String.fromCharCode(65 + optionIndex)}.\r\n                                      </span>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"input-field flex-1\"\r\n                                        value={option.text}\r\n                                        onChange={(e) => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'text', e.target.value)}\r\n                                        placeholder={`Option ${String.fromCharCode(65 + optionIndex)}`}\r\n                                      />\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n\r\n                            {/* Coding Question Details */}\r\n                            {question.questionType === 'coding' && (\r\n                              <div className=\"space-y-4 border-t pt-4\">\r\n                                <h6 className=\"font-medium\">Coding Problem Details</h6>\r\n                                \r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                  <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                      Input Format\r\n                                    </label>\r\n                                    <textarea\r\n                                      rows=\"3\"\r\n                                      className=\"input-field\"\r\n                                      value={question.codingDetails.inputFormat}\r\n                                      onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                        ...question.codingDetails,\r\n                                        inputFormat: e.target.value\r\n                                      })}\r\n                                      placeholder=\"Describe input format\"\r\n                                    />\r\n                                  </div>\r\n                                  \r\n                                  <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                      Output Format\r\n                                    </label>\r\n                                    <textarea\r\n                                      rows=\"3\"\r\n                                      className=\"input-field\"\r\n                                      value={question.codingDetails.outputFormat}\r\n                                      onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                        ...question.codingDetails,\r\n                                        outputFormat: e.target.value\r\n                                      })}\r\n                                      placeholder=\"Describe output format\"\r\n                                    />\r\n                                  </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                    Constraints\r\n                                  </label>\r\n                                  <textarea\r\n                                    rows=\"2\"\r\n                                    className=\"input-field\"\r\n                                    value={question.codingDetails.constraints}\r\n                                    onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                      ...question.codingDetails,\r\n                                      constraints: e.target.value\r\n                                    })}\r\n                                    placeholder=\"Enter constraints\"\r\n                                  />\r\n                                </div>\r\n\r\n                                {/* Examples */}\r\n                                <div>\r\n                                  <div className=\"flex justify-between items-center mb-2\">\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">\r\n                                      Examples\r\n                                    </label>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => addExample(sectionIndex, questionIndex)}\r\n                                      className=\"text-primary-600 hover:text-primary-800 text-sm\"\r\n                                    >\r\n                                      + Add Example\r\n                                    </button>\r\n                                  </div>\r\n                                  \r\n                                  {question.codingDetails.examples.map((example, exampleIndex) => (\r\n                                    <div key={exampleIndex} className=\"bg-white p-3 rounded border mb-2\">\r\n                                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                                        <div>\r\n                                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                                            Input\r\n                                          </label>\r\n                                          <textarea\r\n                                            rows=\"2\"\r\n                                            className=\"input-field text-sm\"\r\n                                            value={example.input}\r\n                                            onChange={(e) => {\r\n                                              const newExamples = [...question.codingDetails.examples];\r\n                                              newExamples[exampleIndex].input = e.target.value;\r\n                                              updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                                ...question.codingDetails,\r\n                                                examples: newExamples\r\n                                              });\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                        <div>\r\n                                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                                            Output\r\n                                          </label>\r\n                                          <textarea\r\n                                            rows=\"2\"\r\n                                            className=\"input-field text-sm\"\r\n                                            value={example.output}\r\n                                            onChange={(e) => {\r\n                                              const newExamples = [...question.codingDetails.examples];\r\n                                              newExamples[exampleIndex].output = e.target.value;\r\n                                              updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                                ...question.codingDetails,\r\n                                                examples: newExamples\r\n                                              });\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"mt-2\">\r\n                                        <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                                          Explanation (Optional)\r\n                                        </label>\r\n                                        <input\r\n                                          type=\"text\"\r\n                                          className=\"input-field text-sm\"\r\n                                          value={example.explanation}\r\n                                          onChange={(e) => {\r\n                                            const newExamples = [...question.codingDetails.examples];\r\n                                            newExamples[exampleIndex].explanation = e.target.value;\r\n                                            updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                              ...question.codingDetails,\r\n                                              examples: newExamples\r\n                                            });\r\n                                          }}\r\n                                        />\r\n                                      </div>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n\r\n                                {/* Test Cases */}\r\n                                <div>\r\n                                  <div className=\"flex justify-between items-center mb-2\">\r\n                                    <label className=\"block text-sm font-medium text-gray-700\">\r\n                                      Test Cases\r\n                                    </label>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      onClick={() => addTestCase(sectionIndex, questionIndex)}\r\n                                      className=\"text-primary-600 hover:text-primary-800 text-sm\"\r\n                                    >\r\n                                      + Add Test Case\r\n                                    </button>\r\n                                  </div>\r\n                                  \r\n                                  {question.codingDetails.testCases.map((testCase, testCaseIndex) => (\r\n                                    <div key={testCaseIndex} className=\"bg-white p-3 rounded border mb-2\">\r\n                                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                                        <div>\r\n                                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                                            Input\r\n                                          </label>\r\n                                          <textarea\r\n                                            rows=\"2\"\r\n                                            className=\"input-field text-sm\"\r\n                                            value={testCase.input}\r\n                                            onChange={(e) => {\r\n                                              const newTestCases = [...question.codingDetails.testCases];\r\n                                              newTestCases[testCaseIndex].input = e.target.value;\r\n                                              updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                                ...question.codingDetails,\r\n                                                testCases: newTestCases\r\n                                              });\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                        <div>\r\n                                          <label className=\"block text-xs font-medium text-gray-600 mb-1\">\r\n                                            Expected Output\r\n                                          </label>\r\n                                          <textarea\r\n                                            rows=\"2\"\r\n                                            className=\"input-field text-sm\"\r\n                                            value={testCase.output}\r\n                                            onChange={(e) => {\r\n                                              const newTestCases = [...question.codingDetails.testCases];\r\n                                              newTestCases[testCaseIndex].output = e.target.value;\r\n                                              updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                                ...question.codingDetails,\r\n                                                testCases: newTestCases\r\n                                              });\r\n                                            }}\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"mt-2\">\r\n                                        <label className=\"flex items-center space-x-2\">\r\n                                          <input\r\n                                            type=\"checkbox\"\r\n                                            checked={testCase.isHidden}\r\n                                            onChange={(e) => {\r\n                                              const newTestCases = [...question.codingDetails.testCases];\r\n                                              newTestCases[testCaseIndex].isHidden = e.target.checked;\r\n                                              updateQuestion(sectionIndex, questionIndex, 'codingDetails', {\r\n                                                ...question.codingDetails,\r\n                                                testCases: newTestCases\r\n                                              });\r\n                                            }}\r\n                                            className=\"rounded\"\r\n                                          />\r\n                                          <span className=\"text-xs text-gray-600\">Hidden Test Case</span>\r\n                                        </label>\r\n                                      </div>\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}