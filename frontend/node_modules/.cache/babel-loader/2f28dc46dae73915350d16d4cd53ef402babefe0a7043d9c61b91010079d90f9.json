{"ast":null,"code":"var _jsxFileName = \"D:\\\\OA (sw)\\\\frontend\\\\src\\\\components\\\\Admin\\\\EditTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { API_ENDPOINTS } from '../../config/api';\nimport { Plus, Trash2, Upload, Save, ArrowLeft, Clock, FileText, Image as ImageIcon, AlertCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTest = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [testData, setTestData] = useState({\n    title: '',\n    description: '',\n    startDate: '',\n    endDate: '',\n    enableCamera: true,\n    enableFullScreen: true,\n    preventCopyPaste: true,\n    preventRightClick: true,\n    sections: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const sectionTypes = ['Aptitude', 'Technical', 'Coding', 'Logical Reasoning', 'English', 'Domain Specific'];\n  const questionTypes = [{\n    value: 'single-correct',\n    label: 'Single Correct Answer'\n  }, {\n    value: 'multi-correct',\n    label: 'Multiple Correct Answers'\n  }, {\n    value: 'coding',\n    label: 'Coding Problem'\n  }];\n  useEffect(() => {\n    fetchTest();\n  }, [id]);\n  const fetchTest = async () => {\n    try {\n      const response = await axios.get(`${API_ENDPOINTS.ADMIN_TESTS}/${id}`);\n      const test = response.data.test;\n      setTestData({\n        title: test.title,\n        description: test.description || '',\n        startDate: new Date(test.startDate).toISOString().slice(0, 16),\n        endDate: new Date(test.endDate).toISOString().slice(0, 16),\n        enableCamera: test.enableCamera,\n        enableFullScreen: test.enableFullScreen,\n        preventCopyPaste: test.preventCopyPaste,\n        preventRightClick: test.preventRightClick,\n        sections: test.sections || []\n      });\n    } catch (error) {\n      console.error('Error fetching test:', error);\n      toast.error('Failed to load test data');\n      navigate('/admin');\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n\n  // Calculate total duration from all sections\n  const getTotalDuration = () => {\n    return testData.sections.reduce((total, section) => total + (section.timeLimit || 0), 0);\n  };\n  const addSection = () => {\n    const newSection = {\n      name: 'Aptitude',\n      timeLimit: 30,\n      numberOfQuestions: 1,\n      instructions: '',\n      order: testData.sections.length,\n      questions: [createNewQuestion()] // Start with one question\n    };\n    setTestData(prev => ({\n      ...prev,\n      sections: [...prev.sections, newSection]\n    }));\n  };\n  const updateSection = (sectionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => {\n        if (index === sectionIndex) {\n          const updatedSection = {\n            ...section,\n            [field]: value\n          };\n\n          // If numberOfQuestions changed, adjust questions array\n          if (field === 'numberOfQuestions') {\n            const currentQuestions = updatedSection.questions.length;\n            const targetQuestions = parseInt(value) || 1;\n            if (targetQuestions > currentQuestions) {\n              // Add new questions\n              const questionsToAdd = targetQuestions - currentQuestions;\n              for (let i = 0; i < questionsToAdd; i++) {\n                updatedSection.questions.push(createNewQuestion());\n              }\n            } else if (targetQuestions < currentQuestions) {\n              // Remove excess questions\n              updatedSection.questions = updatedSection.questions.slice(0, targetQuestions);\n            }\n          }\n          return updatedSection;\n        }\n        return section;\n      })\n    }));\n  };\n  const removeSection = sectionIndex => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\n    }));\n  };\n  const createNewQuestion = () => ({\n    questionText: '',\n    questionImage: '',\n    questionType: 'single-correct',\n    options: [{\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }],\n    codingDetails: {\n      problemStatement: '',\n      inputFormat: '',\n      outputFormat: '',\n      examples: [{\n        input: 'Sample Input',\n        output: 'Sample Output',\n        explanation: ''\n      }],\n      constraints: '',\n      testCases: [{\n        input: 'Test Input',\n        output: 'Test Output',\n        isHidden: false\n      }],\n      timeLimit: 1000,\n      memoryLimit: 256\n    },\n    points: 1\n  });\n  const addQuestion = sectionIndex => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, index) => {\n        if (index === sectionIndex) {\n          const newQuestions = [...section.questions, createNewQuestion()];\n          return {\n            ...section,\n            questions: newQuestions,\n            numberOfQuestions: newQuestions.length\n          };\n        }\n        return section;\n      })\n    }));\n  };\n  const updateQuestion = (sectionIndex, questionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.map((question, qIndex) => qIndex === questionIndex ? {\n          ...question,\n          [field]: value\n        } : question)\n      } : section)\n    }));\n  };\n  const updateQuestionOption = (sectionIndex, questionIndex, optionIndex, field, value) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => sIndex === sectionIndex ? {\n        ...section,\n        questions: section.questions.map((question, qIndex) => qIndex === questionIndex ? {\n          ...question,\n          options: question.options.map((option, oIndex) => {\n            if (oIndex === optionIndex) {\n              // For single-correct questions, uncheck other options when one is checked\n              if (field === 'isCorrect' && value && question.questionType === 'single-correct') {\n                return {\n                  ...option,\n                  [field]: value\n                };\n              }\n              return {\n                ...option,\n                [field]: value\n              };\n            } else if (field === 'isCorrect' && value && question.questionType === 'single-correct') {\n              // Uncheck other options for single-correct\n              return {\n                ...option,\n                isCorrect: false\n              };\n            }\n            return option;\n          })\n        } : question)\n      } : section)\n    }));\n  };\n  const removeQuestion = (sectionIndex, questionIndex) => {\n    setTestData(prev => ({\n      ...prev,\n      sections: prev.sections.map((section, sIndex) => {\n        if (sIndex === sectionIndex) {\n          const newQuestions = section.questions.filter((_, qIndex) => qIndex !== questionIndex);\n          return {\n            ...section,\n            questions: newQuestions,\n            numberOfQuestions: Math.max(1, newQuestions.length) // Minimum 1 question\n          };\n        }\n        return section;\n      })\n    }));\n  };\n  const uploadImage = async (file, sectionIndex, questionIndex) => {\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post(API_ENDPOINTS.ADMIN_UPLOAD_IMAGE, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      updateQuestion(sectionIndex, questionIndex, 'questionImage', response.data.imageUrl);\n      toast.success('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      toast.error('Failed to upload image');\n    }\n  };\n  const validateTest = () => {\n    if (testData.sections.length === 0) {\n      toast.error('Please add at least one section');\n      return false;\n    }\n\n    // Validate sections have questions\n    for (let section of testData.sections) {\n      if (section.questions.length === 0) {\n        toast.error(`Section \"${section.name}\" must have at least one question`);\n        return false;\n      }\n\n      // Validate multiple choice questions have correct answers\n      for (let questionIndex = 0; questionIndex < section.questions.length; questionIndex++) {\n        const question = section.questions[questionIndex];\n        if (question.questionType === 'single-correct' || question.questionType === 'multi-correct') {\n          const hasCorrectAnswer = question.options && question.options.some(option => option.isCorrect);\n          if (!hasCorrectAnswer) {\n            toast.error(`Question ${questionIndex + 1} in section \"${section.name}\" must have at least one correct answer selected.`);\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateTest()) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.put(`${API_ENDPOINTS.ADMIN_TESTS}/${id}`, testData);\n      toast.success('Test updated successfully');\n      navigate('/admin');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error updating test:', error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to update test');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (initialLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-gray-600\",\n          children: \"Loading test data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center py-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/admin'),\n              className: \"btn-secondary flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/logo_oa_point.webp\",\n              alt: \"OA Point Logo\",\n              className: \"h-8 w-8 object-contain\",\n              style: {\n                mixBlendMode: 'multiply'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-primary-600\",\n                children: \"OA Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), \" - Edit Test\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            disabled: loading,\n            className: \"btn-primary flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Save, {\n              className: \"h-4 w-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: loading ? 'Updating...' : 'Update Test'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-6\",\n            children: \"Test Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Test Title *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                required: true,\n                className: \"input-field\",\n                value: testData.title,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  title: e.target.value\n                })),\n                placeholder: \"Enter test title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Total Duration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-field bg-gray-50 flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  className: \"h-4 w-4 text-gray-500 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-700\",\n                  children: [getTotalDuration(), \" minutes\", getTotalDuration() === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-500 ml-2\",\n                    children: \"(Add sections to calculate)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-gray-500 mt-1\",\n                children: \"Automatically calculated from section time limits\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: \"3\",\n              className: \"input-field\",\n              value: testData.description,\n              onChange: e => setTestData(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              placeholder: \"Enter test description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Start Date & Time *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                required: true,\n                className: \"input-field\",\n                value: testData.startDate,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  startDate: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"End Date & Time *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                required: true,\n                className: \"input-field\",\n                value: testData.endDate,\n                onChange: e => setTestData(prev => ({\n                  ...prev,\n                  endDate: e.target.value\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-medium mb-4\",\n              children: \"Proctoring Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.enableCamera,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    enableCamera: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Enable Camera\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.enableFullScreen,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    enableFullScreen: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Full Screen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.preventCopyPaste,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    preventCopyPaste: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Prevent Copy/Paste\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: testData.preventRightClick,\n                  onChange: e => setTestData(prev => ({\n                    ...prev,\n                    preventRightClick: e.target.checked\n                  })),\n                  className: \"rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: \"Prevent Right Click\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-semibold\",\n                children: \"Test Sections\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600 mt-1\",\n                children: \"Edit sections with questions. Duration is calculated automatically.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addSection,\n              className: \"btn-primary flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Add Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), testData.sections.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-12 text-gray-500\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              className: \"mx-auto h-12 w-12 text-gray-400 mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No sections added yet. Click \\\"Add Section\\\" to get started.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-8\",\n            children: testData.sections.map((section, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"border border-gray-200 rounded-lg p-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-lg font-medium\",\n                  children: [\"Section \", sectionIndex + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeSection(sectionIndex),\n                  className: \"text-red-600 hover:text-red-800\",\n                  children: /*#__PURE__*/_jsxDEV(Trash2, {\n                    className: \"h-4 w-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Section Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"input-field\",\n                    value: section.name,\n                    onChange: e => updateSection(sectionIndex, 'name', e.target.value),\n                    children: sectionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: type,\n                      children: type\n                    }, type, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Time Limit (minutes)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"1\",\n                    className: \"input-field\",\n                    value: section.timeLimit,\n                    onChange: e => updateSection(sectionIndex, 'timeLimit', parseInt(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"block text-sm font-medium text-gray-700 mb-1\",\n                    children: \"Number of Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"1\",\n                    className: \"input-field\",\n                    value: section.numberOfQuestions,\n                    onChange: e => updateSection(sectionIndex, 'numberOfQuestions', parseInt(e.target.value))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-1\",\n                  children: \"Instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"2\",\n                  className: \"input-field\",\n                  value: section.instructions,\n                  onChange: e => updateSection(sectionIndex, 'instructions', e.target.value),\n                  placeholder: \"Enter section instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border-t pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"font-medium\",\n                    children: [\"Questions (\", section.questions.length, \"/\", section.numberOfQuestions, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-500 mt-1\",\n                    children: \"Questions are automatically managed based on the \\\"Number of Questions\\\" field above\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this), section.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-gray-50 rounded-lg p-4 mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"font-medium\",\n                      children: [\"Question \", questionIndex + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => removeQuestion(sectionIndex, questionIndex),\n                      className: \"text-red-600 hover:text-red-800\",\n                      children: /*#__PURE__*/_jsxDEV(Trash2, {\n                        className: \"h-4 w-4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 603,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                        children: \"Question Text *\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 609,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        rows: \"3\",\n                        required: true,\n                        className: \"input-field\",\n                        value: question.questionText,\n                        onChange: e => updateQuestion(sectionIndex, questionIndex, 'questionText', e.target.value),\n                        placeholder: \"Enter question text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 612,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 608,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Question Type\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 624,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                          className: \"input-field\",\n                          value: question.questionType,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'questionType', e.target.value),\n                          children: questionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: type.value,\n                            children: type.label\n                          }, type.value, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 633,\n                            columnNumber: 37\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 627,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 623,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          className: \"block text-sm font-medium text-gray-700 mb-1\",\n                          children: \"Points\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 639,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          min: \"1\",\n                          className: \"input-field\",\n                          value: question.points,\n                          onChange: e => updateQuestion(sectionIndex, questionIndex, 'points', parseInt(e.target.value))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 642,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-1\",\n                        children: \"Question Image (Optional)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 654,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center space-x-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"file\",\n                          accept: \"image/*\",\n                          onChange: e => {\n                            if (e.target.files[0]) {\n                              uploadImage(e.target.files[0], sectionIndex, questionIndex);\n                            }\n                          },\n                          className: \"hidden\",\n                          id: `image-${sectionIndex}-${questionIndex}`\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 658,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: `image-${sectionIndex}-${questionIndex}`,\n                          className: \"btn-secondary flex items-center space-x-2 cursor-pointer\",\n                          children: [/*#__PURE__*/_jsxDEV(Upload, {\n                            className: \"h-4 w-4\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 673,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Upload Image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 674,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 669,\n                          columnNumber: 33\n                        }, this), question.questionImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: question.questionImage,\n                          alt: \"Question\",\n                          className: \"h-16 w-16 object-cover rounded\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 677,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 657,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 29\n                    }, this), question.questionType !== 'coding' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"block text-sm font-medium text-gray-700 mb-2\",\n                        children: [\"Answer Options\", question.questionType === 'single-correct' && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-xs text-gray-500 ml-2\",\n                          children: \"(Select only one correct answer)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 692,\n                          columnNumber: 37\n                        }, this), question.questionType === 'multi-correct' && /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-xs text-gray-500 ml-2\",\n                          children: \"(Select multiple correct answers)\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 695,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 689,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"space-y-2\",\n                        children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"flex items-center space-x-2\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: question.questionType === 'single-correct' ? 'radio' : 'checkbox',\n                            name: question.questionType === 'single-correct' ? `question-${sectionIndex}-${questionIndex}` : undefined,\n                            checked: option.isCorrect,\n                            onChange: e => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'isCorrect', e.target.checked),\n                            className: \"rounded\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 701,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"text-sm font-medium w-8\",\n                            children: [String.fromCharCode(65 + optionIndex), \".\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 708,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"text\",\n                            className: \"input-field flex-1\",\n                            value: option.text,\n                            onChange: e => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'text', e.target.value),\n                            placeholder: `Option ${String.fromCharCode(65 + optionIndex)}`\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 711,\n                            columnNumber: 39\n                          }, this)]\n                        }, optionIndex, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 700,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 33\n                      }, this), question.questionType !== 'coding' && !question.options.some(opt => opt.isCorrect) && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center space-x-2 mt-2 text-amber-600\",\n                        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                          className: \"h-4 w-4\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 724,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm\",\n                          children: \"Please select at least one correct answer\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 725,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 723,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 27\n                  }, this)]\n                }, questionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)]\n            }, sectionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTest, \"S/rFPR0EYk6VFBRL4xdoms31P30=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditTest;\nexport default EditTest;\nvar _c;\n$RefreshReg$(_c, \"EditTest\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","toast","API_ENDPOINTS","Plus","Trash2","Upload","Save","ArrowLeft","Clock","FileText","Image","ImageIcon","AlertCircle","jsxDEV","_jsxDEV","EditTest","_s","navigate","id","testData","setTestData","title","description","startDate","endDate","enableCamera","enableFullScreen","preventCopyPaste","preventRightClick","sections","loading","setLoading","initialLoading","setInitialLoading","sectionTypes","questionTypes","value","label","fetchTest","response","get","ADMIN_TESTS","test","data","Date","toISOString","slice","error","console","getTotalDuration","reduce","total","section","timeLimit","addSection","newSection","name","numberOfQuestions","instructions","order","length","questions","createNewQuestion","prev","updateSection","sectionIndex","field","map","index","updatedSection","currentQuestions","targetQuestions","parseInt","questionsToAdd","i","push","removeSection","filter","_","questionText","questionImage","questionType","options","text","isCorrect","codingDetails","problemStatement","inputFormat","outputFormat","examples","input","output","explanation","constraints","testCases","isHidden","memoryLimit","points","addQuestion","newQuestions","updateQuestion","questionIndex","sIndex","question","qIndex","updateQuestionOption","optionIndex","option","oIndex","removeQuestion","Math","max","uploadImage","file","formData","FormData","append","post","ADMIN_UPLOAD_IMAGE","headers","imageUrl","success","validateTest","hasCorrectAnswer","some","handleSubmit","e","preventDefault","put","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","mixBlendMode","disabled","onSubmit","type","required","onChange","target","placeholder","rows","checked","min","accept","files","htmlFor","undefined","String","fromCharCode","opt","_c","$RefreshReg$"],"sources":["D:/OA (sw)/frontend/src/components/Admin/EditTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { API_ENDPOINTS } from '../../config/api';\r\nimport { \r\n  Plus, \r\n  Trash2, \r\n  Upload, \r\n  Save, \r\n  ArrowLeft,\r\n  Clock,\r\n  FileText,\r\n  Image as ImageIcon,\r\n  AlertCircle\r\n} from 'lucide-react';\r\n\r\nconst EditTest = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [testData, setTestData] = useState({\r\n    title: '',\r\n    description: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    enableCamera: true,\r\n    enableFullScreen: true,\r\n    preventCopyPaste: true,\r\n    preventRightClick: true,\r\n    sections: []\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const sectionTypes = [\r\n    'Aptitude',\r\n    'Technical',\r\n    'Coding',\r\n    'Logical Reasoning',\r\n    'English',\r\n    'Domain Specific'\r\n  ];\r\n\r\n  const questionTypes = [\r\n    { value: 'single-correct', label: 'Single Correct Answer' },\r\n    { value: 'multi-correct', label: 'Multiple Correct Answers' },\r\n    { value: 'coding', label: 'Coding Problem' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchTest();\r\n  }, [id]);\r\n\r\n  const fetchTest = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_ENDPOINTS.ADMIN_TESTS}/${id}`);\r\n      const test = response.data.test;\r\n      \r\n      setTestData({\r\n        title: test.title,\r\n        description: test.description || '',\r\n        startDate: new Date(test.startDate).toISOString().slice(0, 16),\r\n        endDate: new Date(test.endDate).toISOString().slice(0, 16),\r\n        enableCamera: test.enableCamera,\r\n        enableFullScreen: test.enableFullScreen,\r\n        preventCopyPaste: test.preventCopyPaste,\r\n        preventRightClick: test.preventRightClick,\r\n        sections: test.sections || []\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching test:', error);\r\n      toast.error('Failed to load test data');\r\n      navigate('/admin');\r\n    } finally {\r\n      setInitialLoading(false);\r\n    }\r\n  };\r\n\r\n  // Calculate total duration from all sections\r\n  const getTotalDuration = () => {\r\n    return testData.sections.reduce((total, section) => total + (section.timeLimit || 0), 0);\r\n  };\r\n\r\n  const addSection = () => {\r\n    const newSection = {\r\n      name: 'Aptitude',\r\n      timeLimit: 30,\r\n      numberOfQuestions: 1,\r\n      instructions: '',\r\n      order: testData.sections.length,\r\n      questions: [createNewQuestion()] // Start with one question\r\n    };\r\n    \r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: [...prev.sections, newSection]\r\n    }));\r\n  };\r\n\r\n  const updateSection = (sectionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) => {\r\n        if (index === sectionIndex) {\r\n          const updatedSection = { ...section, [field]: value };\r\n          \r\n          // If numberOfQuestions changed, adjust questions array\r\n          if (field === 'numberOfQuestions') {\r\n            const currentQuestions = updatedSection.questions.length;\r\n            const targetQuestions = parseInt(value) || 1;\r\n            \r\n            if (targetQuestions > currentQuestions) {\r\n              // Add new questions\r\n              const questionsToAdd = targetQuestions - currentQuestions;\r\n              for (let i = 0; i < questionsToAdd; i++) {\r\n                updatedSection.questions.push(createNewQuestion());\r\n              }\r\n            } else if (targetQuestions < currentQuestions) {\r\n              // Remove excess questions\r\n              updatedSection.questions = updatedSection.questions.slice(0, targetQuestions);\r\n            }\r\n          }\r\n          \r\n          return updatedSection;\r\n        }\r\n        return section;\r\n      })\r\n    }));\r\n  };\r\n\r\n  const removeSection = (sectionIndex) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.filter((_, index) => index !== sectionIndex)\r\n    }));\r\n  };\r\n\r\n  const createNewQuestion = () => ({\r\n    questionText: '',\r\n    questionImage: '',\r\n    questionType: 'single-correct',\r\n    options: [\r\n      { text: '', isCorrect: false },\r\n      { text: '', isCorrect: false },\r\n      { text: '', isCorrect: false },\r\n      { text: '', isCorrect: false }\r\n    ],\r\n    codingDetails: {\r\n      problemStatement: '',\r\n      inputFormat: '',\r\n      outputFormat: '',\r\n      examples: [{ input: 'Sample Input', output: 'Sample Output', explanation: '' }],\r\n      constraints: '',\r\n      testCases: [{ input: 'Test Input', output: 'Test Output', isHidden: false }],\r\n      timeLimit: 1000,\r\n      memoryLimit: 256\r\n    },\r\n    points: 1\r\n  });\r\n\r\n  const addQuestion = (sectionIndex) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, index) => {\r\n        if (index === sectionIndex) {\r\n          const newQuestions = [...section.questions, createNewQuestion()];\r\n          return { \r\n            ...section, \r\n            questions: newQuestions,\r\n            numberOfQuestions: newQuestions.length\r\n          };\r\n        }\r\n        return section;\r\n      })\r\n    }));\r\n  };\r\n\r\n  const updateQuestion = (sectionIndex, questionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => \r\n        sIndex === sectionIndex \r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex ? { ...question, [field]: value } : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const updateQuestionOption = (sectionIndex, questionIndex, optionIndex, field, value) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => \r\n        sIndex === sectionIndex \r\n          ? {\r\n              ...section,\r\n              questions: section.questions.map((question, qIndex) =>\r\n                qIndex === questionIndex \r\n                  ? {\r\n                      ...question,\r\n                      options: question.options.map((option, oIndex) => {\r\n                        if (oIndex === optionIndex) {\r\n                          // For single-correct questions, uncheck other options when one is checked\r\n                          if (field === 'isCorrect' && value && question.questionType === 'single-correct') {\r\n                            return { ...option, [field]: value };\r\n                          }\r\n                          return { ...option, [field]: value };\r\n                        } else if (field === 'isCorrect' && value && question.questionType === 'single-correct') {\r\n                          // Uncheck other options for single-correct\r\n                          return { ...option, isCorrect: false };\r\n                        }\r\n                        return option;\r\n                      })\r\n                    }\r\n                  : question\r\n              )\r\n            }\r\n          : section\r\n      )\r\n    }));\r\n  };\r\n\r\n  const removeQuestion = (sectionIndex, questionIndex) => {\r\n    setTestData(prev => ({\r\n      ...prev,\r\n      sections: prev.sections.map((section, sIndex) => {\r\n        if (sIndex === sectionIndex) {\r\n          const newQuestions = section.questions.filter((_, qIndex) => qIndex !== questionIndex);\r\n          return {\r\n            ...section,\r\n            questions: newQuestions,\r\n            numberOfQuestions: Math.max(1, newQuestions.length) // Minimum 1 question\r\n          };\r\n        }\r\n        return section;\r\n      })\r\n    }));\r\n  };\r\n\r\n  const uploadImage = async (file, sectionIndex, questionIndex) => {\r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n\r\n    try {\r\n      const response = await axios.post(API_ENDPOINTS.ADMIN_UPLOAD_IMAGE, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      \r\n      updateQuestion(sectionIndex, questionIndex, 'questionImage', response.data.imageUrl);\r\n      toast.success('Image uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      toast.error('Failed to upload image');\r\n    }\r\n  };\r\n\r\n  const validateTest = () => {\r\n    if (testData.sections.length === 0) {\r\n      toast.error('Please add at least one section');\r\n      return false;\r\n    }\r\n\r\n    // Validate sections have questions\r\n    for (let section of testData.sections) {\r\n      if (section.questions.length === 0) {\r\n        toast.error(`Section \"${section.name}\" must have at least one question`);\r\n        return false;\r\n      }\r\n\r\n      // Validate multiple choice questions have correct answers\r\n      for (let questionIndex = 0; questionIndex < section.questions.length; questionIndex++) {\r\n        const question = section.questions[questionIndex];\r\n        \r\n        if (question.questionType === 'single-correct' || question.questionType === 'multi-correct') {\r\n          const hasCorrectAnswer = question.options && question.options.some(option => option.isCorrect);\r\n          if (!hasCorrectAnswer) {\r\n            toast.error(`Question ${questionIndex + 1} in section \"${section.name}\" must have at least one correct answer selected.`);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateTest()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.put(`${API_ENDPOINTS.ADMIN_TESTS}/${id}`, testData);\r\n      toast.success('Test updated successfully');\r\n      navigate('/admin');\r\n    } catch (error) {\r\n      console.error('Error updating test:', error);\r\n      if (error.response?.data?.message) {\r\n        toast.error(error.response.data.message);\r\n      } else {\r\n        toast.error('Failed to update test');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (initialLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">Loading test data...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-4\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => navigate('/admin')}\r\n                className=\"btn-secondary flex items-center space-x-2\"\r\n              >\r\n                <ArrowLeft className=\"h-4 w-4\" />\r\n                <span>Back</span>\r\n              </button>\r\n              <img \r\n                src=\"/images/logo_oa_point.webp\" \r\n                alt=\"OA Point Logo\" \r\n                className=\"h-8 w-8 object-contain\"\r\n                style={{ mixBlendMode: 'multiply' }}\r\n              />\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                <span className=\"text-primary-600\">OA Point</span> - Edit Test\r\n              </h1>\r\n            </div>\r\n            <button\r\n              onClick={handleSubmit}\r\n              disabled={loading}\r\n              className=\"btn-primary flex items-center space-x-2\"\r\n            >\r\n              <Save className=\"h-4 w-4\" />\r\n              <span>{loading ? 'Updating...' : 'Update Test'}</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        <form onSubmit={handleSubmit} className=\"space-y-8\">\r\n          {/* Basic Test Information */}\r\n          <div className=\"card\">\r\n            <h2 className=\"text-xl font-semibold mb-6\">Test Information</h2>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Test Title *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.title}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, title: e.target.value }))}\r\n                  placeholder=\"Enter test title\"\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Total Duration\r\n                </label>\r\n                <div className=\"input-field bg-gray-50 flex items-center\">\r\n                  <Clock className=\"h-4 w-4 text-gray-500 mr-2\" />\r\n                  <span className=\"text-gray-700\">\r\n                    {getTotalDuration()} minutes\r\n                    {getTotalDuration() === 0 && (\r\n                      <span className=\"text-gray-500 ml-2\">(Add sections to calculate)</span>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Automatically calculated from section time limits\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-6\">\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                rows=\"3\"\r\n                className=\"input-field\"\r\n                value={testData.description}\r\n                onChange={(e) => setTestData(prev => ({ ...prev, description: e.target.value }))}\r\n                placeholder=\"Enter test description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Start Date & Time *\r\n                </label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.startDate}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, startDate: e.target.value }))}\r\n                />\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  End Date & Time *\r\n                </label>\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  required\r\n                  className=\"input-field\"\r\n                  value={testData.endDate}\r\n                  onChange={(e) => setTestData(prev => ({ ...prev, endDate: e.target.value }))}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Proctoring Settings */}\r\n            <div className=\"mt-6\">\r\n              <h3 className=\"text-lg font-medium mb-4\">Proctoring Settings</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.enableCamera}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, enableCamera: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Enable Camera</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.enableFullScreen}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, enableFullScreen: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Full Screen</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.preventCopyPaste}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, preventCopyPaste: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Prevent Copy/Paste</span>\r\n                </label>\r\n                \r\n                <label className=\"flex items-center space-x-2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={testData.preventRightClick}\r\n                    onChange={(e) => setTestData(prev => ({ ...prev, preventRightClick: e.target.checked }))}\r\n                    className=\"rounded\"\r\n                  />\r\n                  <span className=\"text-sm\">Prevent Right Click</span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sections */}\r\n          <div className=\"card\">\r\n            <div className=\"flex justify-between items-center mb-6\">\r\n              <div>\r\n                <h2 className=\"text-xl font-semibold\">Test Sections</h2>\r\n                <p className=\"text-sm text-gray-600 mt-1\">\r\n                  Edit sections with questions. Duration is calculated automatically.\r\n                </p>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={addSection}\r\n                className=\"btn-primary flex items-center space-x-2\"\r\n              >\r\n                <Plus className=\"h-4 w-4\" />\r\n                <span>Add Section</span>\r\n              </button>\r\n            </div>\r\n\r\n            {testData.sections.length === 0 ? (\r\n              <div className=\"text-center py-12 text-gray-500\">\r\n                <FileText className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\r\n                <p>No sections added yet. Click \"Add Section\" to get started.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-8\">\r\n                {testData.sections.map((section, sectionIndex) => (\r\n                  <div key={sectionIndex} className=\"border border-gray-200 rounded-lg p-6\">\r\n                    <div className=\"flex justify-between items-center mb-4\">\r\n                      <h3 className=\"text-lg font-medium\">Section {sectionIndex + 1}</h3>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => removeSection(sectionIndex)}\r\n                        className=\"text-red-600 hover:text-red-800\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Section Type\r\n                        </label>\r\n                        <select\r\n                          className=\"input-field\"\r\n                          value={section.name}\r\n                          onChange={(e) => updateSection(sectionIndex, 'name', e.target.value)}\r\n                        >\r\n                          {sectionTypes.map(type => (\r\n                            <option key={type} value={type}>{type}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Time Limit (minutes)\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          className=\"input-field\"\r\n                          value={section.timeLimit}\r\n                          onChange={(e) => updateSection(sectionIndex, 'timeLimit', parseInt(e.target.value))}\r\n                        />\r\n                      </div>\r\n                      \r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Number of Questions\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          className=\"input-field\"\r\n                          value={section.numberOfQuestions}\r\n                          onChange={(e) => updateSection(sectionIndex, 'numberOfQuestions', parseInt(e.target.value))}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"mb-4\">\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        Instructions\r\n                      </label>\r\n                      <textarea\r\n                        rows=\"2\"\r\n                        className=\"input-field\"\r\n                        value={section.instructions}\r\n                        onChange={(e) => updateSection(sectionIndex, 'instructions', e.target.value)}\r\n                        placeholder=\"Enter section instructions\"\r\n                      />\r\n                    </div>\r\n\r\n                    {/* Questions */}\r\n                    <div className=\"border-t pt-4\">\r\n                      <div className=\"mb-4\">\r\n                        <h4 className=\"font-medium\">Questions ({section.questions.length}/{section.numberOfQuestions})</h4>\r\n                        <p className=\"text-xs text-gray-500 mt-1\">\r\n                          Questions are automatically managed based on the \"Number of Questions\" field above\r\n                        </p>\r\n                      </div>\r\n\r\n                      {section.questions.map((question, questionIndex) => (\r\n                        <div key={questionIndex} className=\"bg-gray-50 rounded-lg p-4 mb-4\">\r\n                          <div className=\"flex justify-between items-center mb-4\">\r\n                            <h5 className=\"font-medium\">Question {questionIndex + 1}</h5>\r\n                            <button\r\n                              type=\"button\"\r\n                              onClick={() => removeQuestion(sectionIndex, questionIndex)}\r\n                              className=\"text-red-600 hover:text-red-800\"\r\n                            >\r\n                              <Trash2 className=\"h-4 w-4\" />\r\n                            </button>\r\n                          </div>\r\n\r\n                          <div className=\"space-y-4\">\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Question Text *\r\n                              </label>\r\n                              <textarea\r\n                                rows=\"3\"\r\n                                required\r\n                                className=\"input-field\"\r\n                                value={question.questionText}\r\n                                onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'questionText', e.target.value)}\r\n                                placeholder=\"Enter question text\"\r\n                              />\r\n                            </div>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Question Type\r\n                                </label>\r\n                                <select\r\n                                  className=\"input-field\"\r\n                                  value={question.questionType}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'questionType', e.target.value)}\r\n                                >\r\n                                  {questionTypes.map(type => (\r\n                                    <option key={type.value} value={type.value}>{type.label}</option>\r\n                                  ))}\r\n                                </select>\r\n                              </div>\r\n                              \r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Points\r\n                                </label>\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"1\"\r\n                                  className=\"input-field\"\r\n                                  value={question.points}\r\n                                  onChange={(e) => updateQuestion(sectionIndex, questionIndex, 'points', parseInt(e.target.value))}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Image Upload */}\r\n                            <div>\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Question Image (Optional)\r\n                              </label>\r\n                              <div className=\"flex items-center space-x-4\">\r\n                                <input\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  onChange={(e) => {\r\n                                    if (e.target.files[0]) {\r\n                                      uploadImage(e.target.files[0], sectionIndex, questionIndex);\r\n                                    }\r\n                                  }}\r\n                                  className=\"hidden\"\r\n                                  id={`image-${sectionIndex}-${questionIndex}`}\r\n                                />\r\n                                <label\r\n                                  htmlFor={`image-${sectionIndex}-${questionIndex}`}\r\n                                  className=\"btn-secondary flex items-center space-x-2 cursor-pointer\"\r\n                                >\r\n                                  <Upload className=\"h-4 w-4\" />\r\n                                  <span>Upload Image</span>\r\n                                </label>\r\n                                {question.questionImage && (\r\n                                  <img\r\n                                    src={question.questionImage}\r\n                                    alt=\"Question\"\r\n                                    className=\"h-16 w-16 object-cover rounded\"\r\n                                  />\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* MCQ Options */}\r\n                            {question.questionType !== 'coding' && (\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                  Answer Options\r\n                                  {question.questionType === 'single-correct' && (\r\n                                    <span className=\"text-xs text-gray-500 ml-2\">(Select only one correct answer)</span>\r\n                                  )}\r\n                                  {question.questionType === 'multi-correct' && (\r\n                                    <span className=\"text-xs text-gray-500 ml-2\">(Select multiple correct answers)</span>\r\n                                  )}\r\n                                </label>\r\n                                <div className=\"space-y-2\">\r\n                                  {question.options.map((option, optionIndex) => (\r\n                                    <div key={optionIndex} className=\"flex items-center space-x-2\">\r\n                                      <input\r\n                                        type={question.questionType === 'single-correct' ? 'radio' : 'checkbox'}\r\n                                        name={question.questionType === 'single-correct' ? `question-${sectionIndex}-${questionIndex}` : undefined}\r\n                                        checked={option.isCorrect}\r\n                                        onChange={(e) => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'isCorrect', e.target.checked)}\r\n                                        className=\"rounded\"\r\n                                      />\r\n                                      <span className=\"text-sm font-medium w-8\">\r\n                                        {String.fromCharCode(65 + optionIndex)}.\r\n                                      </span>\r\n                                      <input\r\n                                        type=\"text\"\r\n                                        className=\"input-field flex-1\"\r\n                                        value={option.text}\r\n                                        onChange={(e) => updateQuestionOption(sectionIndex, questionIndex, optionIndex, 'text', e.target.value)}\r\n                                        placeholder={`Option ${String.fromCharCode(65 + optionIndex)}`}\r\n                                      />\r\n                                    </div>\r\n                                  ))}\r\n                                </div>\r\n                                {/* Validation warning */}\r\n                                {question.questionType !== 'coding' && !question.options.some(opt => opt.isCorrect) && (\r\n                                  <div className=\"flex items-center space-x-2 mt-2 text-amber-600\">\r\n                                    <AlertCircle className=\"h-4 w-4\" />\r\n                                    <span className=\"text-sm\">Please select at least one correct answer</span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}