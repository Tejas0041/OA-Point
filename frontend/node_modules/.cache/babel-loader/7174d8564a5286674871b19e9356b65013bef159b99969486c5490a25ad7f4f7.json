{"ast":null,"code":"// Date utility functions for consistent formatting across the app\n\nexport const formatDate = (date, format = 'dd/mm/yyyy') => {\n  if (!date) return 'Not available';\n  const dateObj = new Date(date);\n  if (isNaN(dateObj.getTime())) return 'Invalid date';\n  const day = dateObj.getDate().toString().padStart(2, '0');\n  const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\n  const year = dateObj.getFullYear();\n  const hours = dateObj.getHours().toString().padStart(2, '0');\n  const minutes = dateObj.getMinutes().toString().padStart(2, '0');\n  const seconds = dateObj.getSeconds().toString().padStart(2, '0');\n  switch (format) {\n    case 'dd/mm/yyyy':\n      return `${day}/${month}/${year}`;\n    case 'dd/mm/yyyy hh:mm':\n      return `${day}/${month}/${year} ${hours}:${minutes}`;\n    case 'dd/mm/yyyy hh:mm:ss':\n      return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\n    case 'dd/mm/yyyy, hh:mm:ss':\n      return `${day}/${month}/${year}, ${hours}:${minutes}:${seconds}`;\n    default:\n      return `${day}/${month}/${year}`;\n  }\n};\nexport const formatDateTime = date => {\n  return formatDate(date, 'dd/mm/yyyy, hh:mm:ss');\n};\nexport const formatDateOnly = date => {\n  return formatDate(date, 'dd/mm/yyyy');\n};","map":{"version":3,"names":["formatDate","date","format","dateObj","Date","isNaN","getTime","day","getDate","toString","padStart","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","formatDateTime","formatDateOnly"],"sources":["D:/OA (sw)/frontend/src/utils/dateUtils.js"],"sourcesContent":["// Date utility functions for consistent formatting across the app\r\n\r\nexport const formatDate = (date, format = 'dd/mm/yyyy') => {\r\n  if (!date) return 'Not available';\r\n  \r\n  const dateObj = new Date(date);\r\n  if (isNaN(dateObj.getTime())) return 'Invalid date';\r\n  \r\n  const day = dateObj.getDate().toString().padStart(2, '0');\r\n  const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\r\n  const year = dateObj.getFullYear();\r\n  const hours = dateObj.getHours().toString().padStart(2, '0');\r\n  const minutes = dateObj.getMinutes().toString().padStart(2, '0');\r\n  const seconds = dateObj.getSeconds().toString().padStart(2, '0');\r\n  \r\n  switch (format) {\r\n    case 'dd/mm/yyyy':\r\n      return `${day}/${month}/${year}`;\r\n    case 'dd/mm/yyyy hh:mm':\r\n      return `${day}/${month}/${year} ${hours}:${minutes}`;\r\n    case 'dd/mm/yyyy hh:mm:ss':\r\n      return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;\r\n    case 'dd/mm/yyyy, hh:mm:ss':\r\n      return `${day}/${month}/${year}, ${hours}:${minutes}:${seconds}`;\r\n    default:\r\n      return `${day}/${month}/${year}`;\r\n  }\r\n};\r\n\r\nexport const formatDateTime = (date) => {\r\n  return formatDate(date, 'dd/mm/yyyy, hh:mm:ss');\r\n};\r\n\r\nexport const formatDateOnly = (date) => {\r\n  return formatDate(date, 'dd/mm/yyyy');\r\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,UAAU,GAAGA,CAACC,IAAI,EAAEC,MAAM,GAAG,YAAY,KAAK;EACzD,IAAI,CAACD,IAAI,EAAE,OAAO,eAAe;EAEjC,MAAME,OAAO,GAAG,IAAIC,IAAI,CAACH,IAAI,CAAC;EAC9B,IAAII,KAAK,CAACF,OAAO,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,cAAc;EAEnD,MAAMC,GAAG,GAAGJ,OAAO,CAACK,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACzD,MAAMC,KAAK,GAAG,CAACR,OAAO,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAClE,MAAMG,IAAI,GAAGV,OAAO,CAACW,WAAW,CAAC,CAAC;EAClC,MAAMC,KAAK,GAAGZ,OAAO,CAACa,QAAQ,CAAC,CAAC,CAACP,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC5D,MAAMO,OAAO,GAAGd,OAAO,CAACe,UAAU,CAAC,CAAC,CAACT,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAChE,MAAMS,OAAO,GAAGhB,OAAO,CAACiB,UAAU,CAAC,CAAC,CAACX,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAEhE,QAAQR,MAAM;IACZ,KAAK,YAAY;MACf,OAAO,GAAGK,GAAG,IAAII,KAAK,IAAIE,IAAI,EAAE;IAClC,KAAK,kBAAkB;MACrB,OAAO,GAAGN,GAAG,IAAII,KAAK,IAAIE,IAAI,IAAIE,KAAK,IAAIE,OAAO,EAAE;IACtD,KAAK,qBAAqB;MACxB,OAAO,GAAGV,GAAG,IAAII,KAAK,IAAIE,IAAI,IAAIE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;IACjE,KAAK,sBAAsB;MACzB,OAAO,GAAGZ,GAAG,IAAII,KAAK,IAAIE,IAAI,KAAKE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;IAClE;MACE,OAAO,GAAGZ,GAAG,IAAII,KAAK,IAAIE,IAAI,EAAE;EACpC;AACF,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAIpB,IAAI,IAAK;EACtC,OAAOD,UAAU,CAACC,IAAI,EAAE,sBAAsB,CAAC;AACjD,CAAC;AAED,OAAO,MAAMqB,cAAc,GAAIrB,IAAI,IAAK;EACtC,OAAOD,UAAU,CAACC,IAAI,EAAE,YAAY,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}